name: Deploy to AWS RDS Postgres

on:
  push:
    branches:
      - main  # Triggers deployment when you push to the main branch. Change it based on your requirement.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Install PostgreSQL client
      - name: Install PostgreSQL client
        run: sudo apt-get install postgresql-client -y

      # Step 3: Get list of changed SQL files
      - name: List changed SQL files
        id: changed_files
        run: |
          # Ensure we have access to the previous commit and the current commit
          git fetch --depth=2  # Fetch the previous commit as well

          # Get the list of changed SQL files between the previous commit and the current commit
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '\.sql' || true)

          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed SQL files: $CHANGED_FILES"
            echo "files=$CHANGED_FILES" >> $GITHUB_ENV  # Save to environment variable
          else
            echo "No SQL files were changed."
          fi

      # Step 4: Deploy DDL scripts to AWS RDS Postgres
      - name: Deploy DDL Scripts
        env:
          PGHOST: ${{ secrets.DB_HOST }}
          PGDATABASE: ${{ secrets.DB_NAME }}
          PGUSER: ${{ secrets.DB_USER }}
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
          PGPORT: ${{ secrets.DB_PORT || '5432' }}  # Default to 5432 if not specified

        run: |
          # Loop through each changed SQL file and run it
          for file in $files; do
            echo "Running $file ..."
            psql --set ON_ERROR_STOP=1 -e -f $file
          done
