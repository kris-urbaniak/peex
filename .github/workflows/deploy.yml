name: Deploy SQL to Postgres

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install PostgreSQL client
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      # Step 3: Apply SQL files by object and folder structure
      - name: Apply SQL changes
        env:
          PGHOST: ${{ secrets.DB_HOST }}
          PGDATABASE: ${{ secrets.DB_NAME }}
          PGUSER: ${{ secrets.DB_USER }}
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
          PGPORT: ${{ secrets.DB_PORT || '5432' }}
        run: |
          echo "Ensuring migration tracking table exists..."
          psql -v ON_ERROR_STOP=1 <<EOF
          CREATE TABLE IF NOT EXISTS public.schema_migrations (
            filename TEXT PRIMARY KEY,
            applied_at TIMESTAMPTZ DEFAULT now()
          );
          EOF

          echo "Looking for new SQL files in sql/**/**..."
          find sql/ -type f -name "*.sql" | sort | while read file; do
            echo "Checking $file..."
            ALREADY_APPLIED=$(psql -t -c "SELECT 1 FROM public.schema_migrations WHERE filename = '$file';" | xargs)
            if [[ "$ALREADY_APPLIED" != "1" ]]; then
              echo "Applying $file"
              psql -v ON_ERROR_STOP=1 -f "$file"
              psql -c "INSERT INTO public.schema_migrations (filename) VALUES ('$file');"
            else
              echo "$file already applied, skipping."
            fi
          done
